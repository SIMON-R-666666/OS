Q1
#include <stdio.h>
#include <stdlib.h>
#define MAX_BLOCKS 100
int disk[MAX_BLOCKS];
int n;
void showBitVector() 
{
printf("Bit Vector: ");
for (int i = 0; i < n; i++) 
{
printf("%d ", disk[i]);
}
printf("\n");
}
void showDirectory() 
{
printf("Directory (Allocated blocks): ");
for (int i = 0; i < n; i++) 
{
if (disk[i] == 1) 
{
printf("%d ", i);
}
}
printf("\n");
}
void deleteFile(int start, int length) 
{
int i;
for (i = start; i < start + length && i < n; i++) 
{
if (disk[i] == 1) 
{
disk[i] = 0;
}
}
printf("File deleted from blocks %d to %d\n", start, i-1);
}
int main() 
{
int option, start, length;
printf("Enter the total number of disk blocks: ");
scanf("%d", &n);
for (int i = 0; i < n; i++) 
{
disk[i] = rand() % 2;
}
while (1) 
{
printf("\nMenu:\n");
printf("1. Show Bit Vector\n");
printf("2. Show Directory\n");
printf("3. Delete File\n");
printf("4. Exit\n");
printf("Enter your choice: ");
scanf("%d", &option);
switch (option) 
{
case 1:
showBitVector();
break;
case 2:
showDirectory();
break;
case 3:
printf("Enter the starting block and length of the file to delete: ");
scanf("%d %d", &start, &length);
deleteFile(start, length);
break;
case 4:
exit(0);
default:
printf("Invalid choice! Please try again.\n");
}
}
return 0;
}


Q2
#include <stdio.h>
#include <stdlib.h>
void swap(int *a, int *b) 
{
int temp = *a;
*a = *b;
*b = temp;
}
int findClosestRequest(int requests[], int n, int head) 
{
int min_dist = 99999, index = -1;
for (int i = 0; i < n; i++) 
{
if (requests[i] != -1) 
{
int dist = abs(requests[i] - head);
if (dist < min_dist) 
{
min_dist = dist;
index = i;
}
}
}
return index;
}
void sstf(int requests[], int n, int head) 
{
int total_head_movements = 0;
int served[n];
for (int i = 0; i < n; i++) {
served[i] = 0;
}
printf("Disk Requests Order: ");
for (int i = 0; i < n; i++) 
{
int index = findClosestRequest(requests, n, head);
total_head_movements += abs(head - requests[index]);
head = requests[index];
requests[index] = -1; 
printf("%d ", head);
}
printf("\nTotal head movements: %d\n", total_head_movements);
}
int main() 
{
int requests[] = {55, 58, 39, 18, 90, 160, 150, 38, 184};
int n = sizeof(requests) / sizeof(requests[0]);
int head;
printf("Enter the starting head position: ");
scanf("%d", &head);
sstf(requests, n, head);
return 0;
}