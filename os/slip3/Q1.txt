#include <stdio.h>
#include <stdbool.h>

#define PROCESSES 5
#define RESOURCES 4

int allocation[PROCESSES][RESOURCES] = {
    {0, 0, 1, 2},
    {1, 0, 0, 0},
    {1, 3, 5, 4},
    {0, 6, 3, 2},
    {0, 0, 1, 4}
};

int max[PROCESSES][RESOURCES] = {
    {0, 0, 1, 2},
    {1, 7, 5, 0},
    {2, 3, 5, 6},
    {0, 6, 5, 2},
    {0, 6, 5, 6}
};

int available[RESOURCES] = {1, 5, 2, 0};
int need[PROCESSES][RESOURCES];


void calculateNeed() {
    for (int i = 0; i < PROCESSES; i++) {
        for (int j = 0; j < RESOURCES; j++) {
            need[i][j] = max[i][j] - allocation[i][j];
        }
    }
}


bool isSafeState(int safeSequence[]) {
    bool finish[PROCESSES] = {false};
    int work[RESOURCES];
    for (int i = 0; i < RESOURCES; i++) {
        work[i] = available[i];
    }

    int count = 0;
    while (count < PROCESSES) {
        bool found = false;
        for (int p = 0; p < PROCESSES; p++) {
            if (finish[p] == false) {
                int j;
                for (j = 0; j < RESOURCES; j++) {
                    if (need[p][j] > work[j]) {
                        break;
                    }
                }
                if (j == RESOURCES) {
                    for (int k = 0; k < RESOURCES; k++) {
                        work[k] += allocation[p][k];
                    }
                    safeSequence[count++] = p;
                    finish[p] = true;
                    found = true;
                }
            }
        }
        if (found == false) {
            return false; 
        }
    }
    return true; 
}

int main() {
    calculateNeed();

    
    printf("Need Matrix:\n");
    for (int i = 0; i < PROCESSES; i++) {
        for (int j = 0; j < RESOURCES; j++) {
            printf("%d ", need[i][j]);
        }
        printf("\n");
    }

    
    int safeSequence[PROCESSES];
    if (isSafeState(safeSequence)) {
        printf("\nSystem is in a safe state.\nSafe sequence: ");
        for (int i = 0; i < PROCESSES; i++) {
            printf("P%d ", safeSequence[i]);
        }
        printf("\n");
    } else {
        printf("\nSystem is not in a safe state.\n");
    }

    return 0;
}